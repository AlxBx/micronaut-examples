plugins {
    id "application"
    id "eclipse"
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

version "0.1"
group "example"

repositories {
    mavenCentral()
    jcenter()
}

ext {
    micronautVersion = "1.1.0.RC2"
}
dependencies {
    implementation enforcedPlatform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java:$micronautVersion"
    annotationProcessor "io.micronaut:micronaut-validation:$micronautVersion"
    annotationProcessor "io.micronaut.configuration:micronaut-openapi:$micronautVersion"
    implementation "io.swagger.core.v3:swagger-annotations:2.0.4"
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-http-server-netty"
    compileOnly "io.micronaut:micronaut-inject-java"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    
    testAnnotationProcessor "io.micronaut:micronaut-inject-java:$micronautVersion"
    testImplementation "io.micronaut.test:micronaut-test-junit5:1.0.2"
    testImplementation "org.mockito:mockito-junit-jupiter:2.22.0"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.3.0"
}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "example.Application"
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}